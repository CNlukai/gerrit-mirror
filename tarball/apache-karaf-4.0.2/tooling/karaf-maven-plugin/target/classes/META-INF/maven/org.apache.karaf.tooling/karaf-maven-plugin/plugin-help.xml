<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.3 on 2015-11-13 -->

<plugin>
  <name>Apache Karaf :: Tooling :: Maven Karaf Plugin</name>
  <description>The Apache Software Foundation provides support for the Apache community of open-source software projects. The Apache projects are characterized by a collaborative, consensus based development process, an open and pragmatic software license, and a desire to create high quality software that leads the way in its field. We consider ourselves not simply a group of projects sharing a server, but rather a community of developers and users.</description>
  <groupId>org.apache.karaf.tooling</groupId>
  <artifactId>karaf-maven-plugin</artifactId>
  <version>4.0.2</version>
  <goalPrefix>karaf</goalPrefix>
  <mojos>
    <mojo>
      <goal>archive</goal>
      <description>Package a server archive from an assembled server</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>package</phase>
      <implementation>org.apache.karaf.tooling.ArchiveMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>archiveTarGz</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>pack a assembly as a tar.gz archive</description>
        </parameter>
        <parameter>
          <name>archiveZip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>pack a assembly as a zip archive</description>
        </parameter>
        <parameter>
          <name>destDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The target directory of the project.</description>
        </parameter>
        <parameter>
          <name>featureArtifactType</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The artifact type of a feature.</description>
        </parameter>
        <parameter>
          <name>localRepo</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>pathPrefix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Path prefix of files in the created archive.</description>
        </parameter>
        <parameter>
          <name>remoteRepos</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>targetFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The target file to set as the project&apos;s artifact.</description>
        </parameter>
        <parameter>
          <name>targetServerDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The location of the server repository.</description>
        </parameter>
        <parameter>
          <name>usePathPrefix</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Use a path prefix of files in the created archive</description>
        </parameter>
        <parameter>
          <name>useSymLinks</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>use symbolic links in tar.gz or zip archives Symbolic links are not very well supported by windows Platform. At least, is does not work on WinXP + NTFS, so do not include them for now. So the default is false.</description>
        </parameter>
        <parameter>
          <name>workDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Directory that resources are copied to during the build.</description>
        </parameter>
      </parameters>
      <configuration>
        <destDir implementation="java.io.File" default-value="${project.build.directory}"/>
        <featureArtifactType implementation="java.lang.String" default-value="xml"/>
        <localRepo implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
        <pathPrefix implementation="java.lang.String" default-value="${project.artifactId}-${project.version}"/>
        <remoteRepos implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <targetFile implementation="java.io.File" default-value="${project.artifactId}-${project.version}"/>
        <targetServerDirectory implementation="java.io.File" default-value="${project.build.directory}/assembly"/>
        <workDirectory implementation="java.io.File" default-value="${project.build.directory}/${project.artifactId}-${project.version}-installer"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>assembly</goal>
      <description>Installs kar dependencies into a server-under-construction in target/assembly</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-resources</phase>
      <implementation>org.apache.karaf.tooling.AssemblyMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>blacklistedBundles</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>blacklistedFeatures</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>blacklistedProfiles</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>blacklistPolicy</name>
          <type>org.apache.karaf.profile.assembly.Builder$BlacklistPolicy</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>bootBundles</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>bootFeatures</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of features from runtime-scope features xml and kars to be installed into system repo and listed in features service boot features.</description>
        </parameter>
        <parameter>
          <name>bootProfiles</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>bootRepositories</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>defaultStartLevel</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>default start level for bundles in features that don&apos;t specify it.</description>
        </parameter>
        <parameter>
          <name>featureArtifactType</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The artifact type of a feature.</description>
        </parameter>
        <parameter>
          <name>featureRepositories</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Additional feature repositories</description>
        </parameter>
        <parameter>
          <name>featuresCfgFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Features configuration file (etc/org.apache.karaf.features.cfg).</description>
        </parameter>
        <parameter>
          <name>ignoreDependencyFlag</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Ignore the dependency attribute (dependency=&apos;[true|false]&apos;) on bundle</description>
        </parameter>
        <parameter>
          <name>includeBuildOutputDirectory</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Include project build output directory in the assembly</description>
        </parameter>
        <parameter>
          <name>installAllFeaturesByDefault</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>installedBundles</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>installedFeatures</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of features from runtime-scope features xml and kars to be installed into system repo and not mentioned elsewhere.</description>
        </parameter>
        <parameter>
          <name>installedProfiles</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>installedRepositories</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>javase</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specify the version of Java SE to be assumed for osgi.ee.</description>
        </parameter>
        <parameter>
          <name>karafVersion</name>
          <type>org.apache.karaf.profile.assembly.Builder$KarafVersion</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>libraries</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>localRepo</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>profilesUri</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>remoteRepos</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>startupBundles</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>startupFeatures</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of features from runtime-scope features xml and kars to be installed into system and listed in startup.properties.</description>
        </parameter>
        <parameter>
          <name>startupProfiles</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>startupPropertiesFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>startup.properties file.</description>
        </parameter>
        <parameter>
          <name>startupRepositories</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>systemDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Directory used during build to construction the Karaf system repository.</description>
        </parameter>
        <parameter>
          <name>useReferenceUrls</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Use reference: style urls in startup.properties</description>
        </parameter>
        <parameter>
          <name>workDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Base directory used to copy the resources during the build (working directory).</description>
        </parameter>
      </parameters>
      <configuration>
        <featureArtifactType implementation="java.lang.String" default-value="xml"/>
        <featuresCfgFile implementation="java.io.File" default-value="${project.build.directory}/assembly/etc/org.apache.karaf.features.cfg"/>
        <ignoreDependencyFlag implementation="boolean" default-value="false"/>
        <includeBuildOutputDirectory implementation="boolean" default-value="true"/>
        <javase implementation="java.lang.String" default-value="1.7"/>
        <localRepo implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
        <remoteRepos implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <startupPropertiesFile implementation="java.io.File" default-value="${project.build.directory}/assembly/etc/startup.properties"/>
        <systemDirectory implementation="java.io.File" default-value="${project.build.directory}/assembly/system"/>
        <useReferenceUrls implementation="boolean" default-value="false"/>
        <workDirectory implementation="java.io.File" default-value="${project.build.directory}/assembly"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>commands-generate-help</goal>
      <description>Generates help documentation for Karaf commands</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>false</inheritedByDefault>
      <phase>generate-resources</phase>
      <implementation>org.apache.karaf.tooling.commands.GenerateHelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>classLoader</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The classloader to use for loading the commands. Can be &apos;project&apos; or &apos;plugin&apos;</description>
        </parameter>
        <parameter>
          <name>format</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output format</description>
        </parameter>
        <parameter>
          <name>includeHelpOption</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Includes the --help command output in the generated documentation</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>targetFolder</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output folder</description>
        </parameter>
      </parameters>
      <configuration>
        <classLoader implementation="java.lang.String" default-value="project"/>
        <format implementation="java.lang.String" default-value="docbx"/>
        <includeHelpOption implementation="boolean" default-value="true"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <targetFolder implementation="java.io.File" default-value="${project.build.directory}/docbkx/sources"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>features-add-to-repository</goal>
      <description>Add features to a repository directory</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>compile</phase>
      <implementation>org.apache.karaf.tooling.features.AddToRepositoryMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>addTransitiveFeatures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>copyFileBasedDescriptors</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>defaultStartLevel</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The start level exported when no explicit start level is set for a bundle</description>
        </parameter>
        <parameter>
          <name>descriptors</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>failOnArtifactResolutionError</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>featureArtifactType</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The artifact type of a feature.</description>
        </parameter>
        <parameter>
          <name>features</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>flatRepoLayout</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If set to true the exported bundles will be directly copied into the repository dir. If set to false the default maven repository layout will be used</description>
        </parameter>
        <parameter>
          <name>includeMvnBasedDescriptors</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>localRepo</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>remoteRepos</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>repository</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>resolveDefinedRepositoriesRecursively</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>skipNonMavenProtocols</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>workDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Directory that resources are copied to during the build.</description>
        </parameter>
      </parameters>
      <configuration>
        <featureArtifactType implementation="java.lang.String" default-value="xml"/>
        <localRepo implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
        <remoteRepos implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <repository implementation="java.io.File" default-value="${project.build.directory}/features-repo"/>
        <workDirectory implementation="java.io.File" default-value="${project.build.directory}/${project.artifactId}-${project.version}-installer"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>features-export-meta-data</goal>
      <description>Export meta data about features</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>compile</phase>
      <implementation>org.apache.karaf.tooling.features.ExportFeatureMetaDataMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>addTransitiveFeatures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>defaultStartLevel</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The start level exported when no explicit start level is set for a bundle</description>
        </parameter>
        <parameter>
          <name>descriptors</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>failOnArtifactResolutionError</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>featureArtifactType</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The artifact type of a feature.</description>
        </parameter>
        <parameter>
          <name>features</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>includeMvnBasedDescriptors</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>localRepo</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>mergedFeature</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If set to true then all bundles will be merged into one combined feature. In this case duplicates will be eliminated</description>
        </parameter>
        <parameter>
          <name>metaDataFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Name of the file for exported feature meta data</description>
        </parameter>
        <parameter>
          <name>oneVersion</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If set to true then for each bundle symbolic name only the highest version will be used</description>
        </parameter>
        <parameter>
          <name>remoteRepos</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>resolveDefinedRepositoriesRecursively</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>skipNonMavenProtocols</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>workDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Directory that resources are copied to during the build.</description>
        </parameter>
      </parameters>
      <configuration>
        <featureArtifactType implementation="java.lang.String" default-value="xml"/>
        <localRepo implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
        <metaDataFile implementation="java.io.File" default-value="${project.build.directory}/features.xml"/>
        <remoteRepos implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <workDirectory implementation="java.io.File" default-value="${project.build.directory}/${project.artifactId}-${project.version}-installer"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>features-generate-descriptor</goal>
      <description>Generates the features XML file starting with an optional source feature.xml and adding project dependencies as bundles and feature/car dependencies. NB this requires a recent maven-install-plugin such as 2.3.1</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>compile</phase>
      <implementation>org.apache.karaf.tooling.features.GenerateDescriptorMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>addBundlesToPrimaryFeature</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>The standard behavior is to add dependencies as &lt;bundle&gt; elements to a &lt;feature&gt; with the same name as the artifactId of the project. This flag disables that behavior. If this parameter is true, then two other parameters refine the list of bundles added to the primary feature: excludedArtifactIds and ignoreScopeProvided. Each of these specifies dependent artifacts that should not be added to the primary feature.
Note that you may tune the bundle elements by including them in the inputFile. If the inputFile has a feature element for the primary feature, the plugin will respect it, so that you can, for example, set the startLevel or start attribute.
</description>
        </parameter>
        <parameter>
          <name>aggregateFeatures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies whether features dependencies of this project will be included inline in the final output (true), or simply referenced as output artifact dependencies (false). If true, feature dependencies&apos; xml descriptors are read and their contents added to the features descriptor under assembly. If false, feature dependencies are added to the assembled feature as dependencies. Setting this value to true is especially helpful in multiproject builds where subprojects build their own features using aggregateFeatures = false, then combined with aggregateFeatures = true in an aggregation project with explicit dependencies to the child projects.</description>
        </parameter>
        <parameter>
          <name>attachmentArtifactClassifier</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>(wrapper) The artifact classifier for attaching the generated file to the project</description>
        </parameter>
        <parameter>
          <name>attachmentArtifactType</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The artifact type for attaching the generated file to the project</description>
        </parameter>
        <parameter>
          <name>checkDependencyChange</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Master switch to look for and log changed dependencies. If this is set to true and the file referenced by dependencyCache does not exist, it will be unconditionally generated. If the file does exist, it is used to detect changes from previous builds and generate logs of those changes. In that case, failOnDependencyChange = true will cause the build to fail.</description>
        </parameter>
        <parameter>
          <name>dependencyCache</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>(wrapper) Location of dependency cache. This file is generated to contain known dependencies and is generally located in SCM so that it may be used across separate developer builds. This is parameter is ignored unless checkDependencyChange is set to true.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The character encoding scheme to be applied when filtering resources.</description>
        </parameter>
        <parameter>
          <name>escapeString</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Expression preceded with the String won&apos;t be interpolated \${foo} will be replaced with ${foo}</description>
        </parameter>
        <parameter>
          <name>excludedArtifactIds</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Exclude some artifacts from the generated feature. See addBundlesToPrimaryFeature for more details.</description>
        </parameter>
        <parameter>
          <name>failOnDependencyChange</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to fail on changed dependencies (default, true) or warn (false). This is parameter is ignored unless checkDependencyChange is set to true and dependencyCache exists to compare against.</description>
        </parameter>
        <parameter>
          <name>featureArtifactType</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The artifact type of a feature.</description>
        </parameter>
        <parameter>
          <name>filteredInputFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>(wrapper) The filtered input file. This file holds the result of Maven resource interpolation and is generally not necessary to change, although it may be helpful for debugging.</description>
        </parameter>
        <parameter>
          <name>ignoreScopeProvided</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>The standard behavior is to add any dependencies other than those in the runtime scope to the feature bundle. Setting this flag to &apos;true&apos; disables adding any dependencies (transient or otherwise) that are in &lt;scope&gt;provided&lt;/scope&gt;. See addBundlesToPrimaryFeature for more details.</description>
        </parameter>
        <parameter>
          <name>includeProjectArtifact</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Flag indicating whether the main project artifact should be included (true) or not (false). This parameter is useful when you add an execution of this plugin to a project with some packaging that is not feature. If you don&apos;t set this, then you will get a feature that contains the dependencies but not the primary artifact itself. Assumes the main project artifact is a bundle and the feature will be attached alongside using attachmentArtifactClassifier.</description>
        </parameter>
        <parameter>
          <name>includeTransitiveDependency</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Flag indicating whether transitive dependencies should be included (true) or not (false). N.B. Note the default value of this is true, but is suboptimal in cases where specific &lt;feature/&gt; dependencies are provided by the inputFile parameter.</description>
        </parameter>
        <parameter>
          <name>inputFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>An (optional) input feature file to extend. The plugin reads this file, and uses it as a template to create the output. This is highly recommended as it is the only way to add &lt;feature/&gt; elements to the individual features that are generated. Note that this file is filtered using standard Maven resource interpolation, allowing attributes of the input file to be set with information such as ${project.version} from the current build. When dependencies are processed, if they are duplicated in this file, the dependency here provides the baseline information and is supplemented by additional information from the dependency.</description>
        </parameter>
        <parameter>
          <name>installMode</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Installation mode. If present, generate &apos;feature.install&apos; attribute: Installation mode Can be either manual or auto. Specifies whether the feature should be automatically installed when dropped inside the deploy folder. Note: this attribute doesn&apos;t affect feature descriptors that are installed from the feature:install command or as part of the etc/org.apache.karaf.features.cfg file.</description>
        </parameter>
        <parameter>
          <name>localRepo</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>logDependencyChanges</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Copies the contents of dependency change logs that are generated to stdout. This is parameter is ignored unless checkDependencyChange is set to true and dependencyCache exists to compare against.</description>
        </parameter>
        <parameter>
          <name>outputFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The file to generate. This file is attached as a project output artifact with the classifier specified by attachmentArtifactClassifier.</description>
        </parameter>
        <parameter>
          <name>overwriteChangedDependencies</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to overwrite the file referenced by dependencyCache if it has changed. This is parameter is ignored unless checkDependencyChange is set to true, failOnDependencyChange is set to false and dependencyCache exists to compare against.</description>
        </parameter>
        <parameter>
          <name>remoteRepos</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>resolver</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The resolver to use for the feature. Normally null or &apos;OBR&apos; or &apos;(OBR)&apos;</description>
        </parameter>
        <parameter>
          <name>startLevel</name>
          <type>java.lang.Integer</type>
          <required>false</required>
          <editable>true</editable>
          <description>If present, the bundles added to the feature constructed from the dependencies will be marked with this default startlevel. If this parameter is not present, no startlevel attribute will be created. Finer resolution for specific dependencies can be obtained by specifying the dependency in the file referenced by the inputFile parameter.</description>
        </parameter>
        <parameter>
          <name>systemProperties</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>System properties.</description>
        </parameter>
        <parameter>
          <name>workDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Directory that resources are copied to during the build.</description>
        </parameter>
      </parameters>
      <configuration>
        <addBundlesToPrimaryFeature implementation="boolean" default-value="true"/>
        <aggregateFeatures implementation="boolean" default-value="false"/>
        <attachmentArtifactClassifier implementation="java.lang.String" default-value="features"/>
        <attachmentArtifactType implementation="java.lang.String" default-value="xml"/>
        <checkDependencyChange implementation="boolean" default-value="false"/>
        <dependencyCache implementation="java.io.File" default-value="${basedir}/src/main/history/dependencies.xml"/>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}"/>
        <escapeString implementation="java.lang.String" default-value="${maven.resources.escapeString}"/>
        <failOnDependencyChange implementation="boolean" default-value="true"/>
        <featureArtifactType implementation="java.lang.String" default-value="xml"/>
        <filteredInputFile implementation="java.io.File" default-value="${project.build.directory}/feature/filteredInputFeature.xml"/>
        <ignoreScopeProvided implementation="boolean" default-value="false"/>
        <includeProjectArtifact implementation="boolean" default-value="false"/>
        <includeTransitiveDependency implementation="boolean" default-value="true"/>
        <inputFile implementation="java.io.File" default-value="${project.basedir}/src/main/feature/feature.xml"/>
        <localRepo implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
        <logDependencyChanges implementation="boolean" default-value="false"/>
        <outputFile implementation="java.io.File" default-value="${project.build.directory}/feature/feature.xml"/>
        <overwriteChangedDependencies implementation="boolean" default-value="false"/>
        <remoteRepos implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <resolver implementation="java.lang.String" default-value="${resolver}"/>
        <workDirectory implementation="java.io.File" default-value="${project.build.directory}/${project.artifactId}-${project.version}-installer"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>kar</goal>
      <description>Assemble a kar archive from a features.xml file</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>package</phase>
      <implementation>org.apache.karaf.tooling.KarMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>archive</name>
          <type>org.apache.maven.archiver.MavenArchiveConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maven archive configuration to use. See the Javadocs for MavenArchiveConfiguration.</description>
        </parameter>
        <parameter>
          <name>classifier</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Classifier to add to the artifact generated. If given, the artifact will be attached. If it&apos;s not given, it will merely be written to the output directory according to the finalName.</description>
        </parameter>
        <parameter>
          <name>featureArtifactType</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The artifact type of a feature.</description>
        </parameter>
        <parameter>
          <name>featuresFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The features file to use as instructions</description>
        </parameter>
        <parameter>
          <name>finalName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Name of the generated archive.</description>
        </parameter>
        <parameter>
          <name>ignoreDependencyFlag</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Ignore the dependency flag on the bundles in the features XML</description>
        </parameter>
        <parameter>
          <name>localRepo</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Directory containing the generated archive.</description>
        </parameter>
        <parameter>
          <name>remoteRepos</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>repositoryPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The wrapper repository in the kar.</description>
        </parameter>
        <parameter>
          <name>resourcesDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Location of resources directory for additional content to include in the kar. Note that it includes everything under classes so as to include maven-remote-resources</description>
        </parameter>
        <parameter>
          <name>workDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Directory that resources are copied to during the build.</description>
        </parameter>
      </parameters>
      <configuration>
        <featureArtifactType implementation="java.lang.String" default-value="xml"/>
        <featuresFile implementation="java.lang.String" default-value="${project.build.directory}/feature/feature.xml"/>
        <finalName implementation="java.lang.String" default-value="${project.build.finalName}"/>
        <ignoreDependencyFlag implementation="boolean" default-value="false"/>
        <localRepo implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}"/>
        <remoteRepos implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <repositoryPath implementation="java.lang.String" default-value="${repositoryPath}"/>
        <resourcesDir implementation="java.io.File" default-value="${project.build.directory}/classes"/>
        <workDirectory implementation="java.io.File" default-value="${project.build.directory}/${project.artifactId}-${project.version}-installer"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>verify</goal>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.karaf.tooling.VerifyMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>additionalMetadata</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>configuration</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>descriptors</name>
          <type>java.util.Set</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>distDir</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>distribution</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>fail</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>featureArtifactType</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The artifact type of a feature.</description>
        </parameter>
        <parameter>
          <name>features</name>
          <type>java.util.Set</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>framework</name>
          <type>java.util.Set</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>ignoreMissingConditions</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>javase</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>localRepo</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>remoteRepos</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>verifyTransitive</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>workDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Directory that resources are copied to during the build.</description>
        </parameter>
      </parameters>
      <configuration>
        <additionalMetadata implementation="java.io.File">${additional-metadata}</additionalMetadata>
        <configuration implementation="java.lang.String">${configuration}</configuration>
        <descriptors implementation="java.util.Set">${descriptors}</descriptors>
        <distDir implementation="java.lang.String">${dist-dir}</distDir>
        <distribution implementation="java.lang.String" default-value="org.apache.karaf:apache-karaf">${distribution}</distribution>
        <fail implementation="java.lang.String">${fail}</fail>
        <featureArtifactType implementation="java.lang.String" default-value="xml"/>
        <features implementation="java.util.Set">${features}</features>
        <framework implementation="java.util.Set">${framework}</framework>
        <ignoreMissingConditions implementation="boolean">${ignore-missing-conditions}</ignoreMissingConditions>
        <javase implementation="java.lang.String">${javase}</javase>
        <localRepo implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
        <remoteRepos implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <verifyTransitive implementation="boolean">${verify-transitive}</verifyTransitive>
        <workDirectory implementation="java.io.File" default-value="${project.build.directory}/${project.artifactId}-${project.version}-installer"/>
      </configuration>
    </mojo>
  </mojos>
</plugin>